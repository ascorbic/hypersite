---
interface Props {
  title?: string;
  close?: string;
}

const { title = "Untitled", close } = Astro.props;
const thisYear = new Date().getFullYear();
---

<div class="window">
  <div class="titlebar">
    <div class="title-content">
      <div class="titlebar-tool">
        {close && <a href={close} title="Home" class="titlebar-button" />}
      </div>
      <span class="title">{title}</span>
      <div class="titlebar-tool">
        <input type="checkbox" class="maximise" />
      </div>
    </div>
  </div>
  <div class="content">
    <slot />
  </div>
  <footer>
    Built with <a href="https://astro.build">Astro</a>. <a href="/hypersite"
      >Inspired</a
    > by HyperCard. © 1991 – {thisYear} Matt Kane. <a
      href="https://github.com/ascorbic/hypersite">Source</a
    >.
  </footer>
</div>

<style>
  .window {
    position: relative;
    margin: 1rem auto;
    background: #fff;
    border: 2px solid #000;
    box-shadow: 1px 1px 0 #000;
    max-width: 800px;
  }

  .window::before {
    content: "";
    position: absolute;
    inset: -2px;
    border: 1px solid #000;
    opacity: 0;
    pointer-events: none;
    transition:
      transform 0.2s ease,
      opacity 0.2s;
  }

  .window:has(.maximise:active):has(.maximise) {
    background: transparent;
    border-color: transparent;
    box-shadow: none;
  }

  .window:has(.maximise:active) > * {
    opacity: 0;
  }

  .window:has(.maximise:active)::before {
    opacity: 1;
    transform: scale(1.5);
  }

  .window:has(.maximise:checked):has(.maximise:active)::before {
    transform: scale(0.67);
  }

  .maximise {
    width: 22px;
    height: 22px;
    border: 2px solid #000;
    margin: 0 2px;
    appearance: none;
    cursor: var(--cursor-pointer);
  }

  .maximise::after {
    content: "";
    width: 10px;
    height: 10px;
    border: 2px solid black;
    display: inline-block;
    position: relative;
    transform: translate(-2px, -2px);
  }

  .window:has(.maximise:checked) {
    max-width: 100%;
    width: 100vw;
    height: 100vh;
    margin: 0;
    background: #fff;
    border-color: #000;
  }

  footer {
    font-family: var(--caption-font);
    font-size: 20px;
    padding: 2px 1rem;
  }

  a:link,
  a:visited {
    color: inherit;
    cursor: var(--cursor-pointer);
  }

  @media screen and (max-width: 800px) {
    .window {
      margin: 0.5rem;
    }
  }

  .titlebar {
    padding: 4px 2px;
    border-bottom: 2px solid #000;
    font-family: var(--title-font);
  }

  .title-content {
    font-size: 18px;
    position: relative;
    background-image: repeating-linear-gradient(
      to bottom,
      #000000 0px,
      #000000 2px,
      transparent 2px,
      transparent 4px
    );
    grid-template-columns: auto minmax(min-content, 1fr) auto;
    display: grid;
    gap: 0.5rem;
  }

  .titlebar-tool {
    background: #fff;
    margin: 0 12px;
    display: grid;
    height: 22px;
    padding: 0 2px;
  }

  .titlebar-empty {
    width: 20px;
  }

  .titlebar-button {
    width: 22px;
    height: 22px;
    border: 2px solid #000;
  }

  .titlebar-button:active {
    background-image: url("../assets/icons/close.png");
    background-size: 22px 22px;
    background-position: -2px -2px;
  }

  .title {
    background: white;
    padding: 0 12px;
    height: 100%;
    width: fit-content;
    justify-self: center;
    align-items: center;
    display: flex;
  }

  .content {
    padding: 0.75rem;
    font-size: 0.875rem;
    line-height: 1.2;
  }
</style>
